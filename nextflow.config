#!/usr/bin/env nextflow

//cleanup = true

/*
------------------------------------------------------------------------------------------------------------
			 adrienlemeur/genotube
------------------------------------------------------------------------------------------------------------
	Genotube Analysis Pipeline. Started on 12-11-2021

	#### Homepage / Documentation
	https://github.com/adrienlemeur/genotube-td

	#### Authors
	Adrien Le Meur

	#### Devs
	Adrien Le Meur
	Fiona Hak

	with the help of :
	Guislaine RefrÃ©gier
	Rimma Zein Eddine
------------------------------------------------------------------------------------------------------------
*/


//includeConfig

manifest {
	name =				'Genotube'
	author = 			'Adrien Le Meur'
	homePage = 			'https://github.com/adrienlemeur/genotube'
	description = 			'Genotube is a phyloGENOmic pipeline for TUBerculosis and associated species'
	mainScript = 			'main.nf'
	nextflowVersion = 		'!>=21.04.0'
	version = 			'Moses'
}

report {
	enable = 			true
}

executor {
	cpus =				'14'
	memory =			'20GB'
}

params {
	help =				false
	dry =				false

	results =			"results"
	data =				"data"

//	not sure yet
//	scratch =			projectDir

	species = 			"data/species/MTBC_ancestor.txt"
	includeConfig(species)

	multiqc_config =		"data/tools/multiQC/multiqc_config.yaml"
	indexed_genome_path =		"data/reference_genomes/common_sputum_contaminants"

	snpeffConfig =			"data/snpeff/snpEff.config"
	//files to import
	sra =				"data/SRA.txt"


	//remplacer par input
	input = 			projectDir


	fasta =				false		//zipped and none zipped + update channel fork
	fastq =				false
	bam =				false
	vcf =				false

	depth_norm =			-1

	//Variant calling options
	variant_caller =		'freebayes' 	//supported values are 'gatk', 'samtools' and 'freebayes'
	contam_check =			'none'		//supported values are 'compet_mapping', 'taxo_class' and 'none'
	species =			'MTBC'		//'MTBC' or 'other'
	tree_build =			'none'		//'none', 'classic', 'fast', 'fastest'

	additional_variants =		[]		//in progress + add ISmapper
	deletion_region =		false		//true/false flag
	insertion_sequence =		false

	taxonomy =			'barcode'	//'barcode' (default), 'placement' or 'none'

	//Kraken2 database option
	prebuilt_K2_DB =		'8G'		//'8G', '16G', 'none' // bracken built ?
	custom_K2_DB =			false
	download_K2_DB =		false

	//By-pass options
	noGFF =				false		//COVERAGE_CHECK, PROFILING
	FORCE =				'none'		//DOWNLOAD, TRIM, MAP, CALL, ANN
	SKIP =				'none'		//COVERAGE_CHECK, PROFILING
	REMOVE =	'none'	//FASTQ, BAM, VCF

	//Files to keep
	KEEP =				[]		// files to keep / deleted (will be added later)
	keep_fastq =			true
	keep_raw_fastq =		true
	keep_trimmed_fastq =		true

	keep_bam =			true
	keep_BAM_RAW =			true
	keep_processed_bam =		true

	keep_vcf =			true

	keep_reports =			true
	keep_coverage =		true
	keep_metricsreports =		true

	outgroup =			false

	//file for phylogenetic placement
	// TODO : find a way to make the user check if these are good
	// TODO : you should find a way to share the reference alignement. wget ? smaller / better MSA ?
	referenceSNP =			"data/placement_file/reference_snp.bed"
	referenceMSA =			"data/placement_file/reference_msa.fasta"
	referenceTaxo =			"data/placement_file/reference_taxonomy.txt"
	referenceTree =			"data/placement_file/reference_tree.nwk"
	referenceModel =		"data/placement_file/reference_model.txt"
}

singularity {
	enabled =			true
	autoMounts =			false
	cacheDir =			"images"

}

report {
	enabled =			 false
	file =				'reports/report.html'
}

process {
	errorStrategy =			'ignore'

	withLabel: sratoolkit {
		//Max number of CPU speeding up the download
		container =		'fionahak/sratoolkit_genotube:v0.0.1'
		cpus =			'3'
	}

	withLabel: bbtools {
		//The bigger the target sequence, the more memory consuming
		memory =		'5G'
		cpus =			'1'
		container =		'fionahak/bbtools_genotube:v0.0.1'
	}

	withLabel: bbnorm {
		//The bigger the target sequence, the more memory consuming
		memory =		'3G'
		cpus =			'2'
		container =		'fionahak/bbtools_genotube:v0.0.1'
	}

	withLabel: fastp {
		container =		'fionahak/fastp_genotube:v0.0.1'
		memory =		'3GB'
		cpus =			'3'
	}

	withLabel: kraken2_filtering {
		container =		'fionahak/kraken2_genotube:v0.0.1'
		memory =		'4GB'
		cpus =			'2'
	}


	withLabel: kraken2 {
		container =		'fionahak/kraken2_genotube:v0.0.1'
		memory =		'16GB'
		cpus =			'3'
	}

	withLabel: bracken {
		container =		'fionahak/bracken_genotube:v0.0.1'
		memory =		'10GB'
		cpus =			'1'
	}

	withLabel: bwa {
		container =		'fionahak/bwa_genotube:v0.0.3'
		memory =		'2GB'
		cpus =			'4'
	}

	withLabel: samtools {
		container =		'fionahak/samtools_genotube:v0.0.1'
		cpus =			'2'
	}

	withLabel: bedtools {
		container =		'fionahak/bedtools_genotube:v0.0.1'
		cpus =			'1'
	}

	withLabel: bcftools {
		container =		'fionahak/bcftools_genotube:v0.0.1'
		cpus =			'2'
	}

	withLabel: GATK {
		container =		'fionahak/gatk_genotube:v0.0.1'
		cpus =			'3'
	}

	withLabel: GATK_SPARK {
		container =		'fionahak/gatk_genotube:v0.0.1'
		cpus =			'3'
		memory =		'6GB'
	}

	withLabel: elprep {
		container =		'fionahak/elprep_genotube:v0.0.1'
		cpus =			'4'
		memory =		'8GB'
	}

	withLabel: snpeff {
		container =		'fionahak/snpeff_genotube:v0.0.1'
		cpus =			'1'
	}

	withLabel: raxml {
		container =		'fionahak/raxml-ng_genotube:v0.0.1'
		cpus =			'10'
	}

	withLabel: fasttree {
		cpus =			'10'
		container =		'fionahak/fasttree_genotube:v0.0.1'
	}

	withLabel: epa {
		container =		'fionahak/epa-ng_genotube:v0.0.1'
		cpus =			'2'
		memory =		'3GB'
	}

	withLabel: fastqc {
		container =		'nanozoo/fastqc:0.11.9--f61b8b4'
		memory =		'1GB'
		cpus =			'1'
	}

	withLabel: fastqscreen {
		container =		'fionahak/fastq_screen_genotube:v0.0.1'
		memory =		'3GB'
		cpus = 		'2'
	}

	withLabel: multiqc {
		container =		'fionahak/multiqc_genotube:v0.0.1'
		cpus =			'1'
		memory =		'250MB'
	}

	withLabel: python {
		container =		"evolbioinfo/python:v3.6.9"
//		container =		'fionahak/python_genotube:v0.0.1'
		cpus =			'1'
	}

	withLabel: pastml {
		cpus =			'5'
		container =		'fionahak/pastml_genotube:v0.0.1'
	}

	withLabel: freebayes {
		cpus =			'2'
		container =		'fionahak/freebayes_genotube:v0.0.1'
	}

	withLabel: delly {
		cpus =			'2'
		container =		'fionahak/delly_genotube:v0.0.1'
	}

	withLabel: R {
		container =		'fionahak/r_genotube:v0.0.1'
		cpus =			'1'
	}


}
